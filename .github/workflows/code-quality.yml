name: Code quality checks

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
      - main
      - stable/*
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  ruff-check:
    name: Lint with ruff
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          # don't bother with uv, ruff is just a single binary, there's nothing to gain here
          grep ^ruff requirements/ci.txt | pip install --system -r /dev/stdin
      - run: |
          ruff check --output-format=github .

  ruff-format:
    name: Check formatting with ruff
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          # don't bother with uv, ruff is just a single binary, there's nothing to gain here
          grep ^ruff requirements/ci.txt | pip install --system -r /dev/stdin
      - run: |
          ruff format --check --diff

  migrations:
    name: Check for model changes not present in migrations
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        # Needed because the postgres container does not provide a healthcheck
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up backend environment
        uses: maykinmedia/setup-django-backend@v1.3
        with:
          python-version: '3.12'
          setup-node: 'no'
      - name: Run makemigrations to check for missing migrations
        run: |
          src/manage.py makemigrations \
            --check \
            --dry-run
        env:
          DJANGO_SETTINGS_MODULE: "openvtb.conf.ci"
          DEBUG: 'true'
          SECRET_KEY: dummy
          DB_USER: postgres
          DB_NAME: postgres
          DB_PASSWORD: ''
